<project name="Sample Python resource locator plugin" default="test" xmlns:ivy="antlib:org.apache.ivy.ant">
    <property name="build.sysclasspath" value="ignore"/>
    <property name="src.dir" value="src"/>
    <property name="java.src.dir" value="${src.dir}/java"/>
    <property name="resources.dir" value="${src.dir}/resources"/>
    <property name="test.src.dir" value="${src.dir}/test"/>
    <property name="manifest" value="${resources.dir}/META-INF/MANIFEST.MF"/>
    <property name="build.dir" value="build"/>
    <property name="lib.dir" value="lib"/>
    <property name="classes.dir" value="${build.dir}/classes"/>
	<property name="test.classes.dir" value="${build.dir}/test.classes"/>
	<property name="report.dir" value="${build.dir}/reports"/>
	
    <path id="lib.path.id">
        <fileset dir="${lib.dir}"/>
	</path>
    <path id="run.path.id">
        <path refid="lib.path.id"/>
        <path location="${classes.dir}"/>
    </path>
    <path id="test.path.id">
        <path refid="run.path.id"/>
        <path location="${test.classes.dir}"/>
    </path>

    <path id="ivy.task.path">
        <fileset dir="etc">
            <include name="ivy*.jar"/>
        </fileset>
    </path>
    <taskdef resource="org/apache/ivy/ant/antlib.xml"  uri="antlib:org.apache.ivy.ant" classpathref="ivy.task.path"/>


    <target name="refresh.lib" description="Retreive dependencies with Ivy.">
        <delete dir="${lib.dir}"/>
        <ivy:retrieve pattern="${lib.dir}/[artifact].[ext]"/>
    </target>    
    
    <target name="compile" description="Compile the project.">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${java.src.dir}" destdir="${classes.dir}" classpathref="lib.path.id" debug="true" target="5"/>
        <copy todir="${classes.dir}" overwrite="true">
            <fileset dir="${java.src.dir}">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>

    <target name="test" depends="compile" description="Run the tests.">
        <mkdir dir="${test.classes.dir}"/>
        <mkdir dir="${report.dir}"/>
        <mkdir dir="${report.dir}/html"/>
        <mkdir dir="${report.dir}/xml"/>

        <javac srcdir="${test.src.dir}" destdir="${test.classes.dir}" classpathref="run.path.id" debug="true" target="5"/>
        <copy todir="${test.classes.dir}" overwrite="true">
            <fileset dir="${test.src.dir}">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    
        <junit printsummary="yes" failureProperty="test.failed" errorProperty="test.failed" outputtoformatters="false">
            <classpath refid="test.path.id"/>
            <formatter type="xml"/>
            <batchtest todir="${report.dir}/xml">
                <fileset dir="${test.src.dir}" includes="**/*Test.java"/>
            </batchtest>
        </junit>

        <junitreport todir="${report.dir}">
            <fileset dir="${report.dir}/xml" includes="*.xml"/>
            <report format="frames" todir="${report.dir}/html"/>
        </junitreport>

        <fail if="test.failed" message="One or more tests failed.  See the reports (${report.dir}) for details."/>
    </target>

    <target name="package" depends="compile" description="Package up the plugin jar.">
        <ivy:info/>
        <jar file="build/${ivy.module}.jar" manifest="${manifest}">
            <fileset dir="${classes.dir}"/>
            <fileset dir="${resources.dir}" excludes="${manifest}"/>
        </jar>
    </target>

    <target name="src.package">
        <ivy:info/>
        <property name="pack.dir" value="${build.dir}/${ivy.module}"/>
        <delete dir="${pack.dir}"/>
        <exec executable="svn">
            <arg line="export . ${pack.dir}"/>
        </exec>
        <tar destfile="${pack.dir}.tar.gz" basedir="${build.dir}" includes="${ivy.module}/**" compression="gzip"/>
    </target>

    <target name="clean" description="Clean the project.">
        <delete dir="${build.dir}"/>
    </target>
</project>
